name: Release
on:
  push:
    tags:
      - 'v*'

jobs:
  # Main release job - builds and creates GitHub release
  release:
    runs-on: ubuntu-latest
    name: Build and Release
    permissions:
      contents: write
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0  # This is good - fetches full history

      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: 1.21

      # Add this step to explicitly set the version
      - name: Set version from tag
        run: |
          VERSION=${GITHUB_REF#refs/tags/}
          echo "VERSION=$VERSION" >> $GITHUB_ENV
          echo "Building version: $VERSION"

      # Modify the CI pipeline to use the explicit version
      - name: Run CI pipeline with explicit version
        run: |
          # Override the VERSION variable in Makefile
          make ci VERSION=${{ env.VERSION }}

      - name: List built binaries
        run: |
          echo "Built binaries:"
          ls -la calc-*

      # Add step to verify version in built binaries
      - name: Verify version in binaries
        run: |
          echo "Checking version in Linux binary:"
          chmod 755 calc-linux-amd64
          ./calc-linux-amd64 --version || echo "::warning No version flag supported"

      - name: Create Release
        uses: softprops/action-gh-release@v1
        with:
          files: |
            calc-linux-amd64
            calc-windows-amd64.exe
            calc-darwin-amd64
            calc-darwin-arm64
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  update-versions:
    runs-on: ubuntu-latest
    name: Update Version Catalog
    needs: release  # Wait for release to complete first
    permissions:
      contents: write
    concurrency:
      group: version-update
      cancel-in-progress: false  # Don't cancel - let it complete to avoid partial updates
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
          token: ${{ secrets.GITHUB_TOKEN }}

      # Use the composite action - can be local or from another repo
      - name: Update version catalog
        uses: ./.github/actions/update-version-catalog  # Local composite action
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          binary-names: |
            {
              "linux": "calc-linux-amd64",
              "windows": "calc-windows-amd64.exe",
              "darwin": "calc-darwin-amd64", 
              "darwin-arm64": "calc-darwin-arm64"
            }
          max-releases: 50
          max-attempts: 10
          wait-timeout: 180
          target-branch: main